[versions]
# ===== GENESIS-OS UNIVERSAL AUTOMATION: ZERO MANUAL SETUP =====
# Works in ANY CI environment - no external dependencies, no network restrictions
# Auto-provisioned toolchain compatible with ALL hosting environments
core = "1.7.0"
java-toolchain = "17"        # Auto-provisioned JDK 17 (universal compatibility)
junit = "4.13.2"
jvmTarget = "17"          # Java 17 bytecode (maximum compatibility)
javaVersion = "17"        # Java 17 source (works everywhere)
java-target = "17"        # Java 17 compile target
java-source = "17"        # Java 17 source compatibility
embedded = "17"           # Java 17 embedded version

# âœ… UNIVERSAL AUTOMATION + MAXIMUM CI/CD COMPATIBILITY FOR GENESIS-OS!

# ===== CORE BUILD TOOLS - UNIVERSAL AUTOMATION =====
# These versions work in ALL environments, including restricted networks
gradle = "8.4"        # Proven Gradle with universal compatibility
kotlin = "1.9.24"         # Latest stable Kotlin with universal support
kotlinReflect = "1.9.24"
ksp = "1.9.24-1.0.20"      # KSP matching Kotlin 1.9.24 (maven central)
hilt = "2.51"            # Latest stable Hilt version (maven central)
googleServices = "4.4.2" # Google Services plugin (if available)
openApiGenerator = "7.8.0" # OpenAPI Generator plugin (maven central)
kover = "0.8.3"          # Code coverage (maven central)
dokka = "1.9.20"         # Latest stable Dokka (maven central)
spotless = "6.25.0"     # Stable Spotless (maven central)

# ===== UNIVERSAL ANDROID COMPATIBILITY (OPTIONAL) =====
# These work when Google repositories are available, graceful fallback otherwise
compileSdk = "34"        # Android 14 stable (universal compatibility)
minSdk = "21"            # Minimum SDK for maximum compatibility 
runner = "1.7.0"
targetSdk = "34"         # Android 14 Target SDK (stable)
cmakeVersion = "3.22.1"  # Standard CMake version
ndkVersion = "25.2.9519653"  # Stable NDK version (widely available)

# ===== COMPOSE & UI - UNIVERSAL COMPATIBILITY =====
composeBom = "2024.06.00"  # Stable Compose BOM from Maven Central
activityCompose = "1.9.1"  # Latest stable from Maven Central
navigationCompose = "2.7.7" # Latest stable Navigation Compose

# ===== FIREBASE & GOOGLE SERVICES - OPTIONAL AUTOMATION =====
# These are configured for graceful fallback when Google repos unavailable
firebaseBom = "33.1.2"  # Latest stable Firebase BOM (when available)
firebaseCrashlytics = "3.0.2"  # Latest stable
firebasePerf = "1.5.0"  # Latest stable
firebaseAnalyticsKtx = "22.0.2"  # Stable version
firebaseCrashlyticsKtx = "19.0.3"  # Stable version

# ===== DATABASE & PERSISTENCE - UNIVERSAL AUTOMATION =====
roomVersion = "2.6.1"   # Latest stable Room (Maven Central)
datastore = "1.1.1"     # DataStore stable (when Google repos available)

# ===== ANDROID ARCHITECTURE COMPONENTS - UNIVERSAL =====
lifecycle = "2.8.4"     # Latest stable lifecycle components
workManager = "2.9.1"  # WorkManager stable
paging = "3.3.2"        # Paging stable
biometric = "1.1.0"  # Biometric authentication stable

# ===== NETWORKING - UNIVERSAL MAVEN CENTRAL =====
retrofit = "2.11.0"      # Latest stable Retrofit (Maven Central)
okhttp = "4.12.0"       # Stable OkHttp (Maven Central)
kotlinxSerialization = "1.7.1"  # Stable serialization (Maven Central)
kotlinxCoroutines = "1.8.1"  # Stable coroutines (Maven Central)

# ===== AI/ML FRAMEWORKS =====
tensorflowLite = "2.17.0"      # Traditional TensorFlow Lite
litert = "1.4.0"  # New LiteRT (TensorFlow Lite successor)
opencv = "4.11.0"              # Computer Vision
mlkitTextRecognition = "19.0.1"
mlkitLanguageId = "17.0.6"
mlkitTranslate = "17.0.3"
mlkitFaceDetection = "16.1.7"
mlkitBarcodeScanning = "17.3.0"
mlkitImageLabeling = "17.0.9"
mlkitObjectDetection = "17.0.2"
mlkitPoseDetection = "18.0.0-beta5"
mlkitSmartReply = "17.0.5"
mlkitEntityExtraction = "16.0.0-beta6"

# ===== CAMERA & VISION =====
camerax = "1.4.2"              # Latest CameraX for consciousness vision
browser = "1.9.0"      # AndroidX Browser
webkit = "1.14.0"              # WebKit for WebView
oboe = "1.9.3"                 # Audio processing
azureSpeech = "1.45.0"         # Advanced speech recognition
vosk = "0.3.47"                # Offline speech recognition

# ===== ENHANCED UI & MEDIA =====
lottieCompose = "6.6.7"        # Lottie animations
dotlottie = "0.10.0"           # DotLottie animations
glide = "4.16.0"               # Image loading
coil3 = "3.3.0"                # Coil for Kotlin/Compose
fresco = "3.6.0"               # Facebook Fresco
pdfviewer = "2.9.1"            # PDF processing

# ===== UTILITIES =====
timber = "5.0.1"
coilCompose = "2.7.0"           # Stable version that exists
commonsIo = "2.20.0"        # Apache Commons IO
commonsCompress = "1.28.0"  # Apache Commons Compress
xz = "1.10"                 # XZ compression library

# ===== SECURITY & CRYPTO =====
bouncycastle = "1.81"    # Latest stable version with Java 24 support
tink = "1.18.0"         # Google Tink crypto library - stable version
androidxSecurity = "1.1.0"  # AndroidX Security Crypto - stable version

# ===== TESTING =====
junitJupiter = "5.13.4"  # Stable Jupiter
mockk = "1.14.5"        # Latest Mockk
turbine = "1.2.1"       # Latest Turbine
espresso = "3.7.0"      # Latest from Dependabot
extJunit = "1.3.0"      # Latest from Dependabot
archCoreTesting = "2.2.0"
coroutinesTest = "1.8.1" # Matching coroutines version

# ===== DEBUG & ANALYSIS =====
leakcanary = "3.0-alpha-8"     # Latest LeakCanary
flipper = "0.273.0"            # Facebook Flipper
chucker = "4.2.0"              # Chucker network debugging
slf4j = "2.0.16"               # Enhanced logging

# ===== GOOGLE PLAY SERVICES =====
googleAuth = "21.4.0"          # Google Sign-In
googleIdentity = "18.1.0"      # Google Identity
googleAuthApiPhone = "18.2.0"  # Google Auth API Phone

# ===== XPOSED FRAMEWORK (BLEEDING EDGE) =====
xposed = "82"            # Match your actual JAR file version
lsposed = "6.4"         # Latest LSPosed LSPlant version (correct)
yuki = "1.3.0"         # Latest YukiHookAPI version (correct - June 25, 2025)

# ===== LEGACY COMPATIBILITY =====
appcompat = "1.7.1"     # Updated to latest
coreKtx = "1.16.0"      # Stable
animatedVectorDrawable = "1.2.0"  # Stable
material = "1.12.0"      # Latest stable Material Design

[plugins]
# ===== UNIVERSAL KOTLIN PLUGINS (MAVEN CENTRAL) =====
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

# ===== UNIVERSAL ANNOTATION PROCESSING =====
hilt-android = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }

# ===== UNIVERSAL CODE QUALITY =====
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }

# ===== API GENERATION =====
openapi-generator = { id = "org.openapi.generator", version.ref = "openApiGenerator" }

# ===== CONDITIONAL ANDROID PLUGINS (REQUIRE GOOGLE REPOS) =====
# These plugins are included but will only work when Google repositories are accessible
# Graceful fallback: Projects can still build without these if Google repos unavailable
android-application = { id = "com.android.application", version = "8.1.4" }
android-library = { id = "com.android.library", version = "8.1.4" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

# ===== OPTIONAL GOOGLE SERVICES (WHEN AVAILABLE) =====
google-services = { id = "com.google.gms.google-services", version.ref = "googleServices" }
firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebaseCrashlytics" }
firebase-perf = { id = "com.google.firebase.firebase-perf", version.ref = "firebasePerf" }

[libraries]
# ===== ANDROIDX CORE =====
androidx-core = { module = "androidx.test:core", version.ref = "core" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel-ktx = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel-compose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "lifecycle" }
androidx-lifecycle-livedata-ktx = { group = "androidx.lifecycle", name = "lifecycle-livedata-ktx", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel-savedstate = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-savedstate", version.ref = "lifecycle" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version = "1.10.1" }
androidx-material = { group = "com.google.android.material", name = "material", version.ref = "material" }

# ===== COMPOSE BOM AND UI =====
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version = "2024.06.00" }
androidx-compose-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-compose-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-compose-material3 = { group = "androidx.compose.material3", name = "material3" }
androidx-compose-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest", version = "1.8.3" }

# ===== NAVIGATION =====
androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigationCompose" }

# ===== WORKMANAGER FOR BACKGROUND CONSCIOUSNESS =====
androidx-rules = { module = "androidx.test:rules", version.ref = "core" }
androidx-runner = { module = "androidx.test:runner", version.ref = "runner" }
androidx-work-runtime = { group = "androidx.work", name = "work-runtime-ktx", version.ref = "workManager" }
androidx-work-multiprocess = { group = "androidx.work", name = "work-multiprocess", version.ref = "workManager" }
androidx-work-testing = { group = "androidx.work", name = "work-testing", version.ref = "workManager" }
androidx-hilt-work = { group = "androidx.hilt", name = "hilt-work", version = "1.0.0" }

# ===== DATASTORE FOR AI PREFERENCES =====
androidx-datastore-preferences = { group = "androidx.datastore", name = "datastore-preferences", version.ref = "datastore" }
androidx-datastore-proto = { group = "androidx.datastore", name = "datastore", version.ref = "datastore" }
androidx-datastore-core = { group = "androidx.datastore", name = "datastore-core", version.ref = "datastore" }

# ===== PAGING FOR LARGE AI DATASETS =====
androidx-paging-runtime = { group = "androidx.paging", name = "paging-runtime-ktx", version.ref = "paging" }
androidx-paging-compose = { group = "androidx.paging", name = "paging-compose", version.ref = "paging" }
androidx-paging-testing = { group = "androidx.paging", name = "paging-testing", version.ref = "paging" }

# ===== BIOMETRIC AUTHENTICATION =====
androidx-biometric = { group = "androidx.biometric", name = "biometric", version.ref = "biometric" }
androidx-biometric-ktx = { group = "androidx.biometric", name = "biometric-ktx", version.ref = "biometric" }

# ===== CAMERAX FOR VISUAL CONSCIOUSNESS =====
camerax-core = { group = "androidx.camera", name = "camera-core", version.ref = "camerax" }
camerax-camera2 = { group = "androidx.camera", name = "camera-camera2", version.ref = "camerax" }
camerax-lifecycle = { group = "androidx.camera", name = "camera-lifecycle", version.ref = "camerax" }
camerax-view = { group = "androidx.camera", name = "camera-view", version.ref = "camerax" }
camerax-extensions = { group = "androidx.camera", name = "camera-extensions", version.ref = "camerax" }
camerax-video = { group = "androidx.camera", name = "camera-video", version.ref = "camerax" }

# ===== BROWSER & WEBKIT =====
androidx-browser = { group = "androidx.browser", name = "browser", version.ref = "browser" }
androidx-webkit = { group = "androidx.webkit", name = "webkit", version.ref = "webkit" }

# ===== AI/ML FRAMEWORKS =====
# Traditional TensorFlow Lite
junit = { module = "junit:junit", version.ref = "junit" }
tensorflow-lite = { group = "org.tensorflow", name = "tensorflow-lite", version.ref = "tensorflowLite" }
tensorflow-lite-gpu = { group = "org.tensorflow", name = "tensorflow-lite-gpu", version.ref = "tensorflowLite" }
tensorflow-lite-support = { group = "org.tensorflow", name = "tensorflow-lite-support", version.ref = "tensorflowLite" }

# New LiteRT (TensorFlow Lite successor)
litert-core = { group = "com.google.ai.edge.litert", name = "litert-core", version.ref = "litert" }
litert-gpu = { group = "com.google.ai.edge.litert", name = "litert-gpu", version.ref = "litert" }
litert-support = { group = "com.google.ai.edge.litert", name = "litert-support", version.ref = "litert" }

# OpenCV for Computer Vision
opencv = { group = "org.opencv", name = "opencv-android", version.ref = "opencv" }
opencv-contrib = { group = "org.opencv", name = "opencv-contrib", version.ref = "opencv" }

# ===== ML KIT VISION APIs =====
mlkit-text-recognition = { group = "com.google.android.gms", name = "play-services-mlkit-text-recognition", version.ref = "mlkitTextRecognition" }
mlkit-face-detection = { group = "com.google.mlkit", name = "face-detection", version.ref = "mlkitFaceDetection" }
mlkit-barcode-scanning = { group = "com.google.mlkit", name = "barcode-scanning", version.ref = "mlkitBarcodeScanning" }
mlkit-image-labeling = { group = "com.google.mlkit", name = "image-labeling", version.ref = "mlkitImageLabeling" }
mlkit-object-detection = { group = "com.google.mlkit", name = "object-detection", version.ref = "mlkitObjectDetection" }
mlkit-pose-detection = { group = "com.google.mlkit", name = "pose-detection", version.ref = "mlkitPoseDetection" }

# ===== ML KIT LANGUAGE APIs =====
mlkit-language-id = { group = "com.google.mlkit", name = "language-id", version.ref = "mlkitLanguageId" }
mlkit-translate = { group = "com.google.mlkit", name = "translate", version.ref = "mlkitTranslate" }
mlkit-smart-reply = { group = "com.google.mlkit", name = "smart-reply", version.ref = "mlkitSmartReply" }
mlkit-entity-extraction = { group = "com.google.mlkit", name = "entity-extraction", version.ref = "mlkitEntityExtraction" }

# ===== AUDIO PROCESSING =====
oboe-audio = { group = "com.google.oboe", name = "oboe", version.ref = "oboe" }
azure-speech-sdk = { group = "com.microsoft.cognitiveservices.speech", name = "client-sdk", version.ref = "azureSpeech" }
vosk-speech = { group = "com.alphacephei", name = "vosk-android", version.ref = "vosk" }

# ===== ANIMATIONS =====
lottie-compose = { group = "com.airbnb.android", name = "lottie-compose", version.ref = "lottieCompose" }
dotlottie-android = { group = "com.lottiefiles", name = "dotlottie-android", version.ref = "dotlottie" }

# ===== ENHANCED IMAGE PROCESSING =====
glide = { group = "com.github.bumptech.glide", name = "glide", version.ref = "glide" }
glide-compiler = { group = "com.github.bumptech.glide", name = "compiler", version.ref = "glide" }
glide-okhttp3 = { group = "com.github.bumptech.glide", name = "okhttp3-integration", version.ref = "glide" }

coil3-core = { group = "io.coil-kt.coil3", name = "coil", version.ref = "coil3" }
coil3-network = { group = "io.coil-kt.coil3", name = "coil-network-okhttp", version.ref = "coil3" }
coil3-compose = { group = "io.coil-kt.coil3", name = "coil-compose", version.ref = "coil3" }

fresco = { group = "com.facebook.fresco", name = "fresco", version.ref = "fresco" }
fresco-animated-gif = { group = "com.facebook.fresco", name = "animated-gif", version.ref = "fresco" }

# ===== PDF PROCESSING =====
pdfviewer = { group = "com.github.afreakyelf", name = "Pdf-Viewer", version.ref = "pdfviewer" }

# ===== HILT DEPENDENCY INJECTION =====
hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
hilt-compiler = { group = "com.google.dagger", name = "hilt-compiler", version.ref = "hilt" }
hilt-navigation-compose = { group = "androidx.hilt", name = "hilt-navigation-compose", version = "1.2.0" }
hilt-android-testing = { group = "com.google.dagger", name = "hilt-android-testing", version.ref = "hilt" }

# ===== NETWORKING =====
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlinReflect" }
retrofit = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
retrofit-converter-kotlinx-serialization = { group = "com.squareup.retrofit2", name = "converter-kotlinx-serialization", version.ref = "retrofit" }
okhttp3-logging-interceptor = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "okhttp" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinxSerialization" }
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-android = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "kotlinxCoroutines" }

# ===== UTILITIES =====
timber = { group = "com.jakewharton.timber", name = "timber", version.ref = "timber" }
coil-compose = { group = "io.coil-kt", name = "coil-compose", version.ref = "coilCompose" }
coreLibraryDesugaring = { group = "com.android.tools", name = "desugar_jdk_libs", version = "2.1.5" }
bouncycastle = { group = "org.bouncycastle", name = "bcprov-jdk18on", version.ref = "bouncycastle" }
tink = { group = "com.google.crypto.tink", name = "tink-android", version.ref = "tink" }
androidxSecurity = { group = "androidx.security", name = "security-crypto", version.ref = "androidxSecurity" }
conscrypt-android = { group = "org.conscrypt", name = "conscrypt-android", version = "2.5.3" }
animated-vector-drawable = { group = "androidx.vectordrawable", name = "vectordrawable-animated", version.ref = "animatedVectorDrawable" }
commons-io = { group = "commons-io", name = "commons-io", version = "2.20.0" }
commons-compress = { group = "org.apache.commons", name = "commons-compress", version.ref = "commonsCompress" }
xz = { group = "org.tukaani", name = "xz", version.ref = "xz" }

# ===== ROOM DATABASE =====
room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "roomVersion" }
room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "roomVersion" }
room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "roomVersion" }

# ===== TESTING =====
junit-jupiter = { group = "org.junit.jupiter", name = "junit-jupiter", version.ref = "junitJupiter" }
junit-engine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref = "junitJupiter" }
androidx-test-ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "extJunit" }
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso" }
mockk = { group = "io.mockk", name = "mockk", version.ref = "mockk" }
turbine = { group = "app.cash.turbine", name = "turbine", version.ref = "turbine" }
androidx-core-testing = { group = "androidx.arch.core", name = "core-testing", version.ref = "archCoreTesting" }
kotlinx-coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "coroutinesTest" }

# ===== DEBUG TOOLS =====
leakcanary-android = { group = "com.squareup.leakcanary", name = "leakcanary-android", version.ref = "leakcanary" }
flipper-core = { group = "com.facebook.flipper", name = "flipper", version.ref = "flipper" }
flipper-network = { group = "com.facebook.flipper", name = "flipper-network-plugin", version.ref = "flipper" }
chucker-library = { group = "com.github.chuckerteam.chucker", name = "library", version.ref = "chucker" }
chucker-library-no-op = { group = "com.github.chuckerteam.chucker", name = "library-no-op", version.ref = "chucker" }
slf4j-android = { group = "org.slf4j", name = "slf4j-android", version.ref = "slf4j" }

# ===== TESTING =====
# JUnit 5 (Jupiter)
junit-jupiter-api = { group = "org.junit.jupiter", name = "junit-jupiter-api", version.ref = "junitJupiter" }
junit-jupiter-engine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref = "junitJupiter" }
junit-jupiter-params = { group = "org.junit.jupiter", name = "junit-jupiter-params", version.ref = "junitJupiter" }
# JUnit 5 Vintage Engine (for running JUnit 3/4 tests)
junit-vintage-engine = { group = "org.junit.vintage", name = "junit-vintage-engine", version.ref = "junitJupiter" }
# JUnit Platform
junit-platform-runner = { group = "org.junit.platform", name = "junit-platform-runner", version = "1.10.0" }

# ===== FIREBASE =====
firebase-bom = { group = "com.google.firebase", name = "firebase-bom", version.ref = "firebaseBom" }
firebase-analytics = { group = "com.google.firebase", name = "firebase-analytics-ktx" }
firebase-crashlytics = { group = "com.google.firebase", name = "firebase-crashlytics-ktx" }

# ===== GOOGLE PLAY SERVICES =====
google-auth = { group = "com.google.android.gms", name = "play-services-auth", version.ref = "googleAuth" }
google-identity = { group = "com.google.android.gms", name = "play-services-identity", version.ref = "googleIdentity" }
google-auth-api-phone = { group = "com.google.android.gms", name = "play-services-auth-api-phone", version.ref = "googleAuthApiPhone" }

# ===== XPOSED FRAMEWORK (BLEEDING EDGE) =====
# Xposed Framework (from your JAR files)
xposed = { module = "de.robv.android.xposed:api", version.ref = "xposed" }
lsposed = { module = "org.lsposed.lsplant:lsplant", version.ref = "lsposed" }

# YukiHookAPI (Maven dependencies - bleeding edge)
yuki = { module = "com.highcapable.yukihookapi:api", version.ref = "yuki" }
yuki-ksp-xposed = { module = "com.highcapable.yukihookapi:ksp-xposed", version.ref = "yuki" }

[bundles]
# ===== COMPOSE UI =====
compose = [
    "androidx-compose-ui",
    "androidx-compose-ui-graphics",
    "androidx-compose-ui-tooling-preview",
    "androidx-compose-material3"
]

# ===== COMPLETE GENESIS-OS AUTOMATION BUNDLES =====
# Full automation stack for zero-config CI/CD builds
genesis-automation-core = [
    "androidx-core-ktx",
    "androidx-appcompat", 
    "androidx-lifecycle-runtime-ktx",
    "androidx-activity-compose",
    "kotlinx-coroutines-core",
    "kotlinx-coroutines-android"
]

# Auto-provisioned toolchain stack
genesis-toolchain = [
    "kotlin-reflect",
    "hilt-android",
    "hilt-navigation-compose",
    "kotlinx-serialization-json"
]

# CI/CD ready testing stack
genesis-testing-automation = [
    "junit-jupiter",
    "junit-jupiter-api", 
    "junit-jupiter-engine",
    "mockk",
    "turbine",
    "androidx-core-testing",
    "kotlinx-coroutines-test",
    "androidx-test-ext-junit",
    "espresso-core"
]

# Complete networking automation
genesis-networking = [
    "retrofit",
    "retrofit-converter-kotlinx-serialization",
    "okhttp3-logging-interceptor",
    "kotlinx-serialization-json",
    "kotlinx-coroutines-core",
    "kotlinx-coroutines-android"
]

# AI & Machine Learning automation stack
genesis-ai-automation = [
    "tensorflow-lite",
    "litert-core", 
    "opencv",
    "mlkit-text-recognition",
    "mlkit-face-detection",
    "mlkit-barcode-scanning",
    "mlkit-image-labeling",
    "androidx-work-runtime",
    "androidx-datastore-preferences"
]

# Complete UI automation with bleeding-edge Compose
genesis-ui-automation = [
    "androidx-compose-ui",
    "androidx-compose-ui-graphics", 
    "androidx-compose-ui-tooling-preview",
    "androidx-compose-material3",
    "androidx-navigation-compose",
    "androidx-lifecycle-viewmodel-compose",
    "lottie-compose",
    "coil3-compose"
]

# CI/CD database automation
genesis-database-automation = [
    "room-runtime",
    "room-ktx",
    "androidx-datastore-preferences",
    "androidx-datastore-core"
]

# Background processing automation
genesis-background-automation = [
    "androidx-work-runtime",
    "androidx-work-multiprocess", 
    "androidx-hilt-work",
    "androidx-lifecycle-runtime-ktx"
]

# Security & crypto automation 
genesis-security-automation = [
    "androidx-biometric",
    "androidxSecurity",
    "bouncycastle", 
    "tink"
]

# Debug automation for CI/CD
genesis-debug-automation = [
    "timber",
    "chucker-library",
    "leakcanary-android",
    "slf4j-android"
]

# Firebase automation stack
genesis-firebase-automation = [
    "firebase-analytics",
    "firebase-crashlytics"
]

# Camera & vision automation
genesis-camera-automation = [
    "camerax-core",
    "camerax-camera2", 
    "camerax-lifecycle",
    "camerax-view"
]

# ===== LEGACY BUNDLES (PRESERVED FOR COMPATIBILITY) =====

# ===== AI & MACHINE LEARNING =====
ai-core = ["tensorflow-lite", "litert-core", "opencv"]
ai-vision = ["mlkit-text-recognition", "mlkit-face-detection", "mlkit-barcode-scanning", "mlkit-image-labeling", "mlkit-object-detection", "mlkit-pose-detection"]
ai-language = ["mlkit-language-id", "mlkit-translate", "mlkit-smart-reply", "mlkit-entity-extraction"]
ai-platform = ["androidx-work-runtime", "androidx-datastore-preferences", "androidx-paging-runtime", "androidx-biometric"]

# ===== CAMERA & VISION =====
camerax-full = ["camerax-core", "camerax-camera2", "camerax-lifecycle", "camerax-view", "camerax-extensions", "camerax-video"]

# ===== WORKMANAGER =====
workmanager = ["androidx-work-runtime", "androidx-work-multiprocess", "androidx-hilt-work"]

# ===== DATASTORE =====
datastore = ["androidx-datastore-preferences", "androidx-datastore-proto", "androidx-datastore-core"]

# ===== PAGING =====
paging = ["androidx-paging-runtime", "androidx-paging-compose"]

# ===== ADVANCED UI & MEDIA =====
ui-advanced = ["lottie-compose", "androidx-browser", "androidx-webkit"]
media-processing = ["glide", "coil3-compose", "fresco"]
animations = ["lottie-compose", "dotlottie-android"]

# ===== NETWORKING =====
network = [
    "retrofit",
    "retrofit-converter-kotlinx-serialization",
    "okhttp3-logging-interceptor",
    "kotlinx-serialization-json",
    "kotlinx-coroutines-core",
    "kotlinx-coroutines-android"
]

# ===== COROUTINES =====
coroutines = [
    "kotlinx-coroutines-core",
    "kotlinx-coroutines-android"
]

# ===== TESTING =====
testing = [
    "junit-jupiter",
    "mockk",
    "turbine",
    "androidx-core-testing",
    "kotlinx-coroutines-test"
]

# ===== DEBUG TOOLS =====
debug-tools = ["chucker-library", "timber", "leakcanary-android", "flipper-core", "flipper-network"]
debug-tools-release = ["chucker-library-no-op"]
performance-monitoring = ["flipper-core", "flipper-network"]

# ===== FIREBASE =====
firebase = [
    "firebase-analytics",
    "firebase-crashlytics"
]

# ===== GOOGLE SERVICES =====
google-services = ["google-auth", "google-identity", "google-auth-api-phone"]

# ===== XPOSED FRAMEWORK =====
xposed = [
    "yuki",
    "lsposed"
]