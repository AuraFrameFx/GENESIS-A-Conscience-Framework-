# The proguard configuration file for the following section is C:\Users\Wehtt\OneDrive\Documents\GitHub\GENESIS\secure-comm\build\intermediates\aapt_proguard_file\release\generateReleaseLibraryProguardRules\aapt_rules.txt
# Generated by the gradle plugin

# End of content from C:\Users\Wehtt\OneDrive\Documents\GitHub\GENESIS\secure-comm\build\intermediates\aapt_proguard_file\release\generateReleaseLibraryProguardRules\aapt_rules.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\OneDrive\Documents\GitHub\GENESIS\secure-comm\build\intermediates\default_proguard_files\global\proguard-android-optimize.txt-8.13.0-alpha04
# This is a configuration file for ProGuard.
# http://proguard.sourceforge.net/index.html#manual/usage.html
#
# Starting with version 2.2 of the Android plugin for Gradle, this file is distributed together with
# the plugin and unpacked at build-time. The files in $ANDROID_HOME are no longer maintained and
# will be ignored by new version of the Android plugin for Gradle.

# Optimizations: If you don't want to optimize, use the proguard-android.txt configuration file
# instead of this one, which turns off the optimization flags.
-allowaccessmodification

# Preserve some attributes that may be required for reflection.
-keepattributes AnnotationDefault,
                EnclosingMethod,
                InnerClasses,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations,
                Signature

-keep public class com.google.vending.licensing.ILicensingService
-keep public class com.android.vending.licensing.ILicensingService
-keep public class com.google.android.vending.licensing.ILicensingService
-dontnote com.android.vending.licensing.ILicensingService
-dontnote com.google.vending.licensing.ILicensingService
-dontnote com.google.android.vending.licensing.ILicensingService

# For native methods, see https://www.guardsquare.com/manual/configuration/examples#native
-keepclasseswithmembernames,includedescriptorclasses class * {
    native <methods>;
}

# Keep setters in Views so that animations can still work.
-keepclassmembers public class * extends android.view.View {
    void set*(***);
    *** get*();
}

# We want to keep methods in Activity that could be used in the XML attribute onClick.
-keepclassmembers class * extends android.app.Activity {
    public void *(android.view.View);
}

# For enumeration classes, see https://www.guardsquare.com/manual/configuration/examples#enumerations
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

-keepclassmembers class * implements android.os.Parcelable {
    public static final ** CREATOR;
}

# Preserve annotated Javascript interface methods.
-keepclassmembers class * {
    @android.webkit.JavascriptInterface <methods>;
}

# The support libraries contains references to newer platform versions.
# Don't warn about those in case this app is linking against an older
# platform version. We know about them, and they are safe.
-dontnote android.support.**
-dontnote androidx.**
-dontwarn android.support.**
-dontwarn androidx.**

# Understand the @Keep support annotation.
-keep class android.support.annotation.Keep

-keep @android.support.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <init>(...);
}

# These classes are duplicated between android.jar and org.apache.http.legacy.jar.
-dontnote org.apache.http.**
-dontnote android.net.http.**

# These classes are duplicated between android.jar and core-lambda-stubs.jar.
-dontnote java.lang.invoke.**

# End of content from C:\Users\Wehtt\OneDrive\Documents\GitHub\GENESIS\secure-comm\build\intermediates\default_proguard_files\global\proguard-android-optimize.txt-8.13.0-alpha04
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\4c6193ac7afd7acbc2c0ed59bd99f3d3\transformed\material-1.12.0\proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CoordinatorLayout resolves the behaviors of its child components with reflection.
-keep public class * extends androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>();
}

# Make sure we keep annotations for CoordinatorLayout's DefaultBehavior
-keepattributes RuntimeVisible*Annotation*

# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# AppCompatViewInflater reads the viewInflaterClass theme attribute which then
# reflectively instantiates MaterialComponentsViewInflater using the no-argument
# constructor. We only need to keep this constructor and the class name if
# AppCompatViewInflater is also being kept.
-if class androidx.appcompat.app.AppCompatViewInflater
-keep class com.google.android.material.theme.MaterialComponentsViewInflater {
    <init>();
}


# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\4c6193ac7afd7acbc2c0ed59bd99f3d3\transformed\material-1.12.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\2f43657536b5592dc0ee237cc1083606\transformed\shrink-rules\lib\META-INF\com.android.tools\r8-from-1.6.0\kotlin-reflect.pro
# When editing this file, update the following files as well:
# - META-INF/com.android.tools/proguard/kotlin-reflect.pro
# - META-INF/com.android.tools/r8-upto-1.6.0/kotlin-reflect.pro
# - META-INF/proguard/kotlin-reflect.pro
# Keep Metadata annotations so they can be parsed at runtime.
-keep class kotlin.Metadata { *; }

# Keep generic signatures and annotations at runtime.
# R8 requires InnerClasses and EnclosingMethod if you keepattributes Signature.
-keepattributes InnerClasses,Signature,RuntimeVisible*Annotations,EnclosingMethod

# Don't note on API calls from different JVM versions as they're gated properly at runtime.
-dontnote kotlin.internal.PlatformImplementationsKt

# Don't note on internal APIs, as there is some class relocating that shrinkers may unnecessarily find suspicious.
-dontwarn kotlin.reflect.jvm.internal.**

# Statically guarded by try-catch block and not used on Android, see CacheByClass
-dontwarn java.lang.ClassValue

# Do not even execute try-catch block for ClassValue
-assumenosideeffects class kotlin.reflect.jvm.internal.CacheByClassKt {
    boolean useClassValue return false;
}

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\2f43657536b5592dc0ee237cc1083606\transformed\shrink-rules\lib\META-INF\com.android.tools\r8-from-1.6.0\kotlin-reflect.pro
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\4a75f36917732e23ed0f2a162ed84e39\transformed\hilt-android-2.57\proguard.txt
# Keep for the reflective cast done in EntryPoints.
# See b/183070411#comment4 for more info.
-keep,allowobfuscation,allowshrinking @dagger.hilt.EntryPoint class *# Keep for the reflective cast done in EntryPoints.
# See b/183070411#comment4 for more info.
-keep,allowobfuscation,allowshrinking @dagger.hilt.android.EarlyEntryPoint class *# Keep for the reflective cast done in EntryPoints.
# See b/183070411#comment4 for more info.
-keep,allowobfuscation,allowshrinking @dagger.hilt.internal.ComponentEntryPoint class *
-keep,allowobfuscation,allowshrinking @dagger.hilt.internal.GeneratedEntryPoint class *
# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\4a75f36917732e23ed0f2a162ed84e39\transformed\hilt-android-2.57\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\9c65a4bfdfe7b471c64b3bf4dd9b9ff8\transformed\appcompat-1.7.1\proguard.txt
# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl* {
  <methods>;
}

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\9c65a4bfdfe7b471c64b3bf4dd9b9ff8\transformed\appcompat-1.7.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\f1cf98066db61c4c246f60e91eaed1b1\transformed\navigation-runtime-release\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\f1cf98066db61c4c246f60e91eaed1b1\transformed\navigation-runtime-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\07e8f7d45d7e5bb5f0230c6e68a7a62b\transformed\navigation-common-release\proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NavArgsLazy creates NavArgs instances using reflection
-if public class ** implements androidx.navigation.NavArgs
-keepclassmembers public class <1> {
    ** fromBundle(android.os.Bundle);
}

# Retain the @Navigator.Name annotation on each subclass of Navigator.
# R8 full mode only retains annotations on items matched by a -keep rule,
# hence the extra -keep rule for the subclasses of Navigator.
#
# A -keep rule for the Navigator.Name annotation class is not required
# since the annotation is referenced from the code.
-keepattributes RuntimeVisibleAnnotations
-keep,allowobfuscation,allowshrinking class * extends androidx.navigation.Navigator

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\07e8f7d45d7e5bb5f0230c6e68a7a62b\transformed\navigation-common-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\f04f5111f03000c30f88a3eeeaea34c5\transformed\navigation-compose-release\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\f04f5111f03000c30f88a3eeeaea34c5\transformed\navigation-compose-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\d82874280504808becc9aeb7a3a15ff1\transformed\animation-core-release\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\d82874280504808becc9aeb7a3a15ff1\transformed\animation-core-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\c045b6dbf90127793d8e683cfb49370c\transformed\material-ripple-release\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\c045b6dbf90127793d8e683cfb49370c\transformed\material-ripple-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\a63f71b3959dae9027f30b6ac105963b\transformed\animation-release\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\a63f71b3959dae9027f30b6ac105963b\transformed\animation-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\0c814e16620ba601e64df6294dbad57a\transformed\foundation-layout-release\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\0c814e16620ba601e64df6294dbad57a\transformed\foundation-layout-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\aaa4587f1c61d6a12fa0364bec074e77\transformed\foundation-release\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
}


# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\aaa4587f1c61d6a12fa0364bec074e77\transformed\foundation-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\c7dc92d22901ed1357e6c7ac44a3121a\transformed\ui-unit-release\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\c7dc92d22901ed1357e6c7ac44a3121a\transformed\ui-unit-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\5ec945a001911b534ae5297c7b9aab21\transformed\ui-geometry-release\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\5ec945a001911b534ae5297c7b9aab21\transformed\ui-geometry-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\91b1dba3c1baef18f963c5e63dfd67f2\transformed\ui-util-release\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\91b1dba3c1baef18f963c5e63dfd67f2\transformed\ui-util-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\f83194077794a060c62cbfa3c6e3cc94\transformed\ui-text-release\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\f83194077794a060c62cbfa3c6e3cc94\transformed\ui-text-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\241901dbff96c56a841fc90663f21740\transformed\ui-tooling-preview-release\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\241901dbff96c56a841fc90663f21740\transformed\ui-tooling-preview-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\541ac5fbf9cf49272b6ab703f3f3bf8c\transformed\ui-graphics-release\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\541ac5fbf9cf49272b6ab703f3f3bf8c\transformed\ui-graphics-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\f46ed9589dda57f94af51559e97d217f\transformed\fragment-1.5.4\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The default FragmentFactory creates Fragment instances using reflection
-if public class ** extends androidx.fragment.app.Fragment
-keepclasseswithmembers,allowobfuscation public class <1> {
    public <init>();
}

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\f46ed9589dda57f94af51559e97d217f\transformed\fragment-1.5.4\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\b4d411ed274baf5fdd7fd568727dbb73\transformed\vectordrawable-animated-1.2.0\proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# keep setters in VectorDrawables so that animations can still work.
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$* {
   void set*(***);
   *** get*();
}

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\b4d411ed274baf5fdd7fd568727dbb73\transformed\vectordrawable-animated-1.2.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\6f017535648f4e96cea3e1759398b74f\transformed\coordinatorlayout-1.1.0\proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CoordinatorLayout resolves the behaviors of its child components with reflection.
-keep public class * extends androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>();
}

# Make sure we keep annotations for CoordinatorLayout's DefaultBehavior and ViewPager's DecorView
-keepattributes *Annotation*

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\6f017535648f4e96cea3e1759398b74f\transformed\coordinatorlayout-1.1.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\e7263c9170f42838cfe366dc8fcb1cab\transformed\transition-1.5.0\proguard.txt
# Copyright (C) 2017 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep a field in transition that is used to keep a reference to weakly-referenced object
-keepclassmembers class androidx.transition.ChangeBounds$* extends android.animation.AnimatorListenerAdapter {
  androidx.transition.ChangeBounds$ViewBounds mViewBounds;
}

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\e7263c9170f42838cfe366dc8fcb1cab\transformed\transition-1.5.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\10282b9606c97a12828654fb7772b5d2\transformed\recyclerview-1.1.0\proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# When layoutManager xml attribute is used, RecyclerView inflates
#LayoutManagers' constructors using reflection.
-keep public class * extends androidx.recyclerview.widget.RecyclerView$LayoutManager {
    public <init>(android.content.Context, android.util.AttributeSet, int, int);
    public <init>();
}

-keepclassmembers class androidx.recyclerview.widget.RecyclerView {
    public void suppressLayout(boolean);
    public boolean isLayoutSuppressed();
}
# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\10282b9606c97a12828654fb7772b5d2\transformed\recyclerview-1.1.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\cc430bd42a5e39548c973cbbe619980e\transformed\graphics-path-1.0.1\proguard.txt
-keepclasseswithmembers class androidx.graphics.path.** {
    native <methods>;
}

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\cc430bd42a5e39548c973cbbe619980e\transformed\graphics-path-1.0.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\766e38645d0b2d418d0dd20c1c88046c\transformed\core-1.16.0\proguard.txt
# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.ViewCompat$Api* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.WindowInsetsCompat$*Impl* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.app.NotificationCompat$*$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.os.UserHandleCompat$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.widget.EdgeEffectCompat$Api*Impl {
  <methods>;
}

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\766e38645d0b2d418d0dd20c1c88046c\transformed\core-1.16.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\2fa480fa603df3124d6e8c8a18ae51d0\transformed\lifecycle-process-2.9.2\proguard.txt
# this rule is need to work properly when app is compiled with api 28, see b/142778206
-keepclassmembers class * extends androidx.lifecycle.EmptyActivityLifecycleCallbacks { *; }
# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\2fa480fa603df3124d6e8c8a18ae51d0\transformed\lifecycle-process-2.9.2\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\8be08f31eb3a0feab7224bb5dcc8909b\transformed\lifecycle-livedata-core-ktx-2.9.2\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\8be08f31eb3a0feab7224bb5dcc8909b\transformed\lifecycle-livedata-core-ktx-2.9.2\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\f399dd56e759d7ce7889cd8ee681b3b5\transformed\lifecycle-livedata-2.9.2\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\f399dd56e759d7ce7889cd8ee681b3b5\transformed\lifecycle-livedata-2.9.2\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\26bc9eab113b286ac9864db8e30916d6\transformed\lifecycle-runtime-compose-release\proguard.txt
# Workaround for https://issuetracker.google.com/issues/346808608
#
# `androidx.lifecycle.compose.LocalLifecycleOwner` will reflectively lookup for
# `androidx.compose.ui.platform.LocalLifecycleOwner` to ensure backward compatibility
# when using Lifecycle 2.8+ with Compose 1.6.
#
# We need to keep the getter if the code using this is included.
#
# We need to suppress `ShrinkerUnresolvedReference` because the `LocalComposition` is in a
# different module.
#
#noinspection ShrinkerUnresolvedReference
-if public class androidx.compose.ui.platform.AndroidCompositionLocals_androidKt {
    public static *** getLocalLifecycleOwner();
}
-keep public class androidx.compose.ui.platform.AndroidCompositionLocals_androidKt {
    public static *** getLocalLifecycleOwner();
}

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\26bc9eab113b286ac9864db8e30916d6\transformed\lifecycle-runtime-compose-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\10e67ee2700d703c1d1d5f4764e20313\transformed\shrink-rules\lib\META-INF\proguard\androidx-lifecycle-lifecycle-common-java8.pro
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\10e67ee2700d703c1d1d5f4764e20313\transformed\shrink-rules\lib\META-INF\proguard\androidx-lifecycle-lifecycle-common-java8.pro
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\b5c799d7dedd949634ef6cbdf91f689d\transformed\lifecycle-viewmodel-savedstate-release\proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>(androidx.lifecycle.SavedStateHandle);
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application,androidx.lifecycle.SavedStateHandle);
}

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\b5c799d7dedd949634ef6cbdf91f689d\transformed\lifecycle-viewmodel-savedstate-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\008d01241c89a10a953ccecbcd4902e3\transformed\lifecycle-viewmodel-release\proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>();
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application);
}

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\008d01241c89a10a953ccecbcd4902e3\transformed\lifecycle-viewmodel-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\8d6efe5dda4839897f51957fa5db1d86\transformed\savedstate-compose-release\proguard.txt
# Workaround for https://issuetracker.google.com/issues/346808608
#
# `androidx.savedstate.compose.LocalSavedStateRegistryOwner` will reflectively lookup for
# `androidx.compose.ui.platform.LocalSavedStateRegistryOwner` to ensure backward compatibility
# when using SavedState >= 1.3 with Compose <= 1.7.
#
# We need to keep the getter if the code using this is included.
#
# We need to suppress `ShrinkerUnresolvedReference` because the `LocalComposition` is in a
# different module.
#
#noinspection ShrinkerUnresolvedReference
-if public class androidx.compose.ui.platform.AndroidCompositionLocals_androidKt {
    public static *** getLocalSavedStateRegistryOwner();
}
-keep public class androidx.compose.ui.platform.AndroidCompositionLocals_androidKt {
    public static *** getLocalSavedStateRegistryOwner();
}

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\8d6efe5dda4839897f51957fa5db1d86\transformed\savedstate-compose-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\293038199a4264ef1849a038ec794327\transformed\savedstate-ktx-1.3.1\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\293038199a4264ef1849a038ec794327\transformed\savedstate-ktx-1.3.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\8209dccee1e960f4fcb027a74b33df2d\transformed\savedstate-release\proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

-keepclassmembers,allowobfuscation class * implements androidx.savedstate.SavedStateRegistry$AutoRecreated {
    <init>();
}

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\8209dccee1e960f4fcb027a74b33df2d\transformed\savedstate-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\0417357991d2ed2535cd8f062c039d6d\transformed\lifecycle-runtime-release\proguard.txt
-keepattributes AnnotationDefault,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations

-keepclassmembers enum androidx.lifecycle.Lifecycle$Event {
    <fields>;
}

-keep class * implements androidx.lifecycle.GeneratedAdapter {
    <init>(...);
}

-keepclassmembers class ** {
    @androidx.lifecycle.OnLifecycleEvent *;
}

# The deprecated `android.app.Fragment` creates `Fragment` instances using reflection.
# See: b/338958225, b/341537875
-keepclasseswithmembers,allowobfuscation public class androidx.lifecycle.ReportFragment {
    public <init>();
}

# this rule is need to work properly when app is compiled with api 28, see b/142778206
# Also this rule prevents registerIn from being inlined.
-keepclassmembers class androidx.lifecycle.ReportFragment$LifecycleCallbacks { *; }

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\0417357991d2ed2535cd8f062c039d6d\transformed\lifecycle-runtime-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\b14ef66ef438787299502553c8160825\transformed\lifecycle-viewmodel-ktx-2.9.2\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\b14ef66ef438787299502553c8160825\transformed\lifecycle-viewmodel-ktx-2.9.2\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\02ca16d01b5b183339b8aff646dda966\transformed\lifecycle-livedata-core-2.9.2\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\02ca16d01b5b183339b8aff646dda966\transformed\lifecycle-livedata-core-2.9.2\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\b181e7b1bbe3c2552734f6419196133c\transformed\lifecycle-viewmodel-compose-release\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\b181e7b1bbe3c2552734f6419196133c\transformed\lifecycle-viewmodel-compose-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\34366bd75d59993baee5b14a576cc91d\transformed\ui-release\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# We supply these as stubs and are able to link to them at runtime
# because they are hidden public classes in Android. We don't want
# R8 to complain about them not being there during optimization.
-dontwarn android.view.RenderNode
-dontwarn android.view.DisplayListCanvas
-dontwarn android.view.HardwareCanvas

-keepclassmembers class androidx.compose.ui.platform.ViewLayerContainer {
    protected void dispatchGetDisplayList();
}

-keepclassmembers class androidx.compose.ui.platform.AndroidComposeView {
    android.view.View findViewByAccessibilityIdTraversal(int);
}

# Users can create Modifier.Node instances that implement multiple Modifier.Node interfaces,
# so we cannot tell whether two modifier.node instances are of the same type without using
# reflection to determine the class type. See b/265188224 for more context.
-keep,allowshrinking class * extends androidx.compose.ui.node.ModifierNodeElement

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
    # For functions generating error messages
    static java.lang.String exceptionMessage*(...);
    java.lang.String exceptionMessage*(...);
}

# When pointer input modifier nodes are added dynamically and have the same keys (common when
# developers `Unit` for their keys), we need a way to differentiate them and using a
# functional interface and comparing classes allows us to do that.
-keepnames class androidx.compose.ui.input.pointer.PointerInputEventHandler {
    *;
}


# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\34366bd75d59993baee5b14a576cc91d\transformed\ui-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\353b6a786297bc1fd971a9453a693a3d\transformed\core-ktx-1.16.0\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\353b6a786297bc1fd971a9453a693a3d\transformed\core-ktx-1.16.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\455339ebca6227108ad56ac49789add1\transformed\shrink-rules\lib\META-INF\proguard\retrofit2.pro
# Retrofit does reflection on generic parameters. InnerClasses is required to use Signature and
# EnclosingMethod is required to use InnerClasses.
-keepattributes Signature, InnerClasses, EnclosingMethod

# Retrofit does reflection on method and parameter annotations.
-keepattributes RuntimeVisibleAnnotations, RuntimeVisibleParameterAnnotations

# Keep annotation default values (e.g., retrofit2.http.Field.encoded).
-keepattributes AnnotationDefault

# Retain service method parameters when optimizing.
-keepclassmembers,allowshrinking,allowobfuscation interface * {
    @retrofit2.http.* <methods>;
}

# Ignore annotation used for build tooling.
-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement

# Ignore JSR 305 annotations for embedding nullability information.
-dontwarn javax.annotation.**

# Guarded by a NoClassDefFoundError try/catch and only used when on the classpath.
-dontwarn kotlin.Unit

# Top-level functions that can only be used by Kotlin.
-dontwarn retrofit2.KotlinExtensions
-dontwarn retrofit2.KotlinExtensions$*

# With R8 full mode, it sees no subtypes of Retrofit interfaces since they are created with a Proxy
# and replaces all potential values with null. Explicitly keeping the interfaces prevents this.
-if interface * { @retrofit2.http.* <methods>; }
-keep,allowobfuscation interface <1>

# Keep inherited services.
-if interface * { @retrofit2.http.* <methods>; }
-keep,allowobfuscation interface * extends <1>

# With R8 full mode generic signatures are stripped for classes that are not
# kept. Suspend functions are wrapped in continuations where the type argument
# is used.
-keep,allowobfuscation,allowshrinking class kotlin.coroutines.Continuation

# R8 full mode strips generic signatures from return types if not kept.
-if interface * { @retrofit2.http.* public *** *(...); }
-keep,allowoptimization,allowshrinking,allowobfuscation class <3>

# With R8 full mode generic signatures are stripped for classes that are not kept.
-keep,allowobfuscation,allowshrinking class retrofit2.Response

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\455339ebca6227108ad56ac49789add1\transformed\shrink-rules\lib\META-INF\proguard\retrofit2.pro
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\0744769c49e9c9d8a6c6053432370c8c\transformed\shrink-rules\lib\META-INF\com.android.tools\r8\kotlinx-serialization-common.pro
# Keep `Companion` object fields of serializable classes.
# This avoids serializer lookup through `getDeclaredClasses` as done for named companion objects.
-if @kotlinx.serialization.Serializable class **
-keepclassmembers class <1> {
    static <1>$* Companion;
}

# Keep names for named companion object from obfuscation
# Names of a class and of a field are important in lookup of named companion in runtime
-keepnames @kotlinx.serialization.internal.NamedCompanion class *
-if @kotlinx.serialization.internal.NamedCompanion class *
-keepclassmembernames class * {
    static <1> *;
}

# Keep `serializer()` on companion objects (both default and named) of serializable classes.
-if @kotlinx.serialization.Serializable class ** {
    static **$* *;
}
-keepclassmembers class <2>$<3> {
    kotlinx.serialization.KSerializer serializer(...);
}

# Keep `INSTANCE.serializer()` of serializable objects.
-if @kotlinx.serialization.Serializable class ** {
    public static ** INSTANCE;
}
-keepclassmembers class <1> {
    public static <1> INSTANCE;
    kotlinx.serialization.KSerializer serializer(...);
}

# @Serializable and @Polymorphic are used at runtime for polymorphic serialization.
-keepattributes RuntimeVisibleAnnotations,AnnotationDefault

# Don't print notes about potential mistakes or omissions in the configuration for kotlinx-serialization classes
# See also https://github.com/Kotlin/kotlinx.serialization/issues/1900
-dontnote kotlinx.serialization.**

# Serialization core uses `java.lang.ClassValue` for caching inside these specified classes.
# If there is no `java.lang.ClassValue` (for example, in Android), then R8/ProGuard will print a warning.
# However, since in this case they will not be used, we can disable these warnings
-dontwarn kotlinx.serialization.internal.ClassValueReferences

# disable optimisation for descriptor field because in some versions of ProGuard, optimization generates incorrect bytecode that causes a verification error
# see https://github.com/Kotlin/kotlinx.serialization/issues/2719
-keepclassmembers public class **$$serializer {
    private ** descriptor;
}

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\0744769c49e9c9d8a6c6053432370c8c\transformed\shrink-rules\lib\META-INF\com.android.tools\r8\kotlinx-serialization-common.pro
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\0744769c49e9c9d8a6c6053432370c8c\transformed\shrink-rules\lib\META-INF\com.android.tools\r8\kotlinx-serialization-r8.pro
# Rule to save runtime annotations on serializable class.
# If the R8 full mode is used, annotations are removed from classes-files.
#
# For the annotation serializer, it is necessary to read the `Serializable` annotation inside the serializer<T>() function - if it is present,
# then `SealedClassSerializer` is used, if absent, then `PolymorphicSerializer'.
#
# When using R8 full mode, all interfaces will be serialized using `PolymorphicSerializer`.
#
# see https://github.com/Kotlin/kotlinx.serialization/issues/2050

 -if @kotlinx.serialization.Serializable class **
 -keep, allowshrinking, allowoptimization, allowobfuscation, allowaccessmodification class <1>


# Rule to save INSTANCE field and serializer function for Kotlin serializable objects.
#
# R8 full mode works differently if the instance is not explicitly accessed in the code.
#
# see https://github.com/Kotlin/kotlinx.serialization/issues/2861
# see https://issuetracker.google.com/issues/379996140

-keepclassmembers @kotlinx.serialization.Serializable class ** {
    public static ** INSTANCE;
    kotlinx.serialization.KSerializer serializer(...);
}

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\0744769c49e9c9d8a6c6053432370c8c\transformed\shrink-rules\lib\META-INF\com.android.tools\r8\kotlinx-serialization-r8.pro
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\8b5e40f390c9be8e93d5bb6b1ac151ad\transformed\runtime-saveable-release\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\8b5e40f390c9be8e93d5bb6b1ac151ad\transformed\runtime-saveable-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\68f65c28b2492b6f28e2cb9565e25f65\transformed\runtime-release\proguard.txt
-assumenosideeffects public class androidx.compose.runtime.ComposerKt {
    void sourceInformation(androidx.compose.runtime.Composer,java.lang.String);
    void sourceInformationMarkerStart(androidx.compose.runtime.Composer,int,java.lang.String);
    void sourceInformationMarkerEnd(androidx.compose.runtime.Composer);
}

# Composer's class initializer doesn't do anything but create an EMPTY object. Marking the
# initializers as having no side effects can help encourage shrinkers to merge/devirtualize Composer
# with ComposerImpl.
-assumenosideeffects public class androidx.compose.runtime.Composer {
    void <clinit>();
}
-assumenosideeffects public class androidx.compose.runtime.ComposerImpl {
    void <clinit>();
}

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.runtime.** {
    # java.lang.Void == methods that return Nothing
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);

    # For functions generating error messages
    static java.lang.String exceptionMessage*(...);
    java.lang.String exceptionMessage*(...);

    static void compose*RuntimeError(...);
    static java.lang.Void compose*RuntimeError(...);
}


# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\68f65c28b2492b6f28e2cb9565e25f65\transformed\runtime-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\e600653e1a45870aa6be574b8e3c3a93\transformed\core-viewtree-1.0.0\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\e600653e1a45870aa6be574b8e3c3a93\transformed\core-viewtree-1.0.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\8a7f3788581e7a63539565daa17613c5\transformed\shrink-rules\lib\META-INF\com.android.tools\r8\coroutines.pro
# When editing this file, update the following files as well:
# - META-INF/proguard/coroutines.pro
# - META-INF/com.android.tools/proguard/coroutines.pro

# Most of volatile fields are updated with AFU and should not be mangled
-keepclassmembers class kotlinx.coroutines.** {
    volatile <fields>;
}

# Same story for the standard library's SafeContinuation that also uses AtomicReferenceFieldUpdater
-keepclassmembers class kotlin.coroutines.SafeContinuation {
    volatile <fields>;
}

# These classes are only required by kotlinx.coroutines.debug.AgentPremain, which is only loaded when
# kotlinx-coroutines-core is used as a Java agent, so these are not needed in contexts where ProGuard is used.
-dontwarn java.lang.instrument.ClassFileTransformer
-dontwarn sun.misc.SignalHandler
-dontwarn java.lang.instrument.Instrumentation
-dontwarn sun.misc.Signal

# Only used in `kotlinx.coroutines.internal.ExceptionsConstructor`.
# The case when it is not available is hidden in a `try`-`catch`, as well as a check for Android.
-dontwarn java.lang.ClassValue

# An annotation used for build tooling, won't be directly accessed.
-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\8a7f3788581e7a63539565daa17613c5\transformed\shrink-rules\lib\META-INF\com.android.tools\r8\coroutines.pro
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\75aa776234ec0210920731eb44dc8c40\transformed\shrink-rules\lib\META-INF\com.android.tools\r8-from-1.6.0\coroutines.pro
# Allow R8 to optimize away the FastServiceLoader.
# Together with ServiceLoader optimization in R8
# this results in direct instantiation when loading Dispatchers.Main
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatcherLoader {
    boolean FAST_SERVICE_LOADER_ENABLED return false;
}

-assumenosideeffects class kotlinx.coroutines.internal.FastServiceLoaderKt {
    boolean ANDROID_DETECTED return true;
}

# Disable support for "Missing Main Dispatcher", since we always have Android main dispatcher
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatchersKt {
    boolean SUPPORT_MISSING return false;
}

# Statically turn off all debugging facilities and assertions
-assumenosideeffects class kotlinx.coroutines.DebugKt {
    boolean getASSERTIONS_ENABLED() return false;
    boolean getDEBUG() return false;
    boolean getRECOVER_STACK_TRACES() return false;
}

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\75aa776234ec0210920731eb44dc8c40\transformed\shrink-rules\lib\META-INF\com.android.tools\r8-from-1.6.0\coroutines.pro
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\b9de0472ababdcb6afd4e6d7cc71a180\transformed\okhttp-release\proguard.txt
# JSR 305 annotations are for embedding nullability information.
-dontwarn javax.annotation.**

# Animal Sniffer compileOnly dependency to ensure APIs are compatible with older versions of Java.
-dontwarn org.codehaus.mojo.animal_sniffer.*

# OkHttp platform used only on JVM and when Conscrypt and other security providers are available.
# May be used with robolectric or deliberate use of Bouncy Castle on Android
-dontwarn okhttp3.internal.platform.**
-dontwarn org.conscrypt.**
-dontwarn org.bouncycastle.**
-dontwarn org.openjsse.**

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\b9de0472ababdcb6afd4e6d7cc71a180\transformed\okhttp-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\643f8d7d81b9586ea36db18ba93d9ca9\transformed\security-crypto-1.1.0\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\643f8d7d81b9586ea36db18ba93d9ca9\transformed\security-crypto-1.1.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\9fa0a0d01f2f72a766a1d858ab9328f3\transformed\shrink-rules\lib\META-INF\proguard\protobuf.pro
# Recently Protobuf Javalite introduced a change that relies on reflection,
# which doesn't work with Proguard. This rule keeps the reflection usages in
# (shaded) Protobuf classes in Tink as-is.
# The location of this file is determined by
# - https://developer.android.com/studio/build/shrink-code#configuration-files
# - https://docs.bazel.build/versions/master/be/java.html#java_library.resources
# See also:
# - https://github.com/google/tink/issues/361
# - https://github.com/protocolbuffers/protobuf/issues/6463
# WARNING: the shaded package name com.google.crypto.tink.shaded.protobuf must
# be kept in sync with jar_jar_rules.txt.
-keepclassmembers class * extends com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite {
  <fields>;
}

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\9fa0a0d01f2f72a766a1d858ab9328f3\transformed\shrink-rules\lib\META-INF\proguard\protobuf.pro
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\656c211f09d9136d4cf7d4a73fec2db5\transformed\startup-runtime-1.2.0\proguard.txt
# It's important that we preserve initializer names, given they are used in the AndroidManifest.xml.
-keepnames class * extends androidx.startup.Initializer

# These Proguard rules ensures that ComponentInitializers are are neither shrunk nor obfuscated,
# and are a part of the primary dex file. This is because they are discovered and instantiated
# during application startup.
-keep class * extends androidx.startup.Initializer {
    # Keep the public no-argument constructor while allowing other methods to be optimized.
    <init>();
}

-assumenosideeffects class androidx.startup.StartupLogger { public static <methods>; }

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\656c211f09d9136d4cf7d4a73fec2db5\transformed\startup-runtime-1.2.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\0fc07d38ea651d21308a48255001584a\transformed\versionedparcelable-1.1.1\proguard.txt
-keep class * implements androidx.versionedparcelable.VersionedParcelable
-keep public class android.support.**Parcelizer { *; }
-keep public class androidx.**Parcelizer { *; }
-keep public class androidx.versionedparcelable.ParcelImpl

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\0fc07d38ea651d21308a48255001584a\transformed\versionedparcelable-1.1.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\79ce0f9e8960c32d94620216e21b6434\transformed\shrink-rules\lib\META-INF\proguard\androidx-collection-collection-ktx.pro
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\79ce0f9e8960c32d94620216e21b6434\transformed\shrink-rules\lib\META-INF\proguard\androidx-collection-collection-ktx.pro
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\d6d9199023a1db459d6c3bd7fb0613ca\transformed\shrink-rules\lib\META-INF\proguard\androidx-annotations.pro
-keep,allowobfuscation @interface androidx.annotation.Keep
-keep @androidx.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <init>(...);
}

-keepclassmembers,allowobfuscation class * {
  @androidx.annotation.DoNotInline <methods>;
}

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\d6d9199023a1db459d6c3bd7fb0613ca\transformed\shrink-rules\lib\META-INF\proguard\androidx-annotations.pro
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\0dc1d6ac1fb9db7e40c00ca6b9e42cba\transformed\shrink-rules\lib\META-INF\com.android.tools\r8\r8.pro
-identifiernamestring @dagger.internal.IdentifierNameString class ** {
    static java.lang.String *;
}

# End of content from C:\Users\Wehtt\.gradle\jdks\eclipse_adoptium-23-amd64-windows.2\caches\9.0.0\transforms\0dc1d6ac1fb9db7e40c00ca6b9e42cba\transformed\shrink-rules\lib\META-INF\com.android.tools\r8\r8.pro
# The proguard configuration file for the following section is <unknown>
-keep class **.R
-keep class **.R$* {*;}
# End of content from <unknown>